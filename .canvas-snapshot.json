{
  "quiz": {
    "id": 32113,
    "title": "Python Fundamentals Quiz",
    "html_url": "https://learning.flatironschool.com/courses/5935/quizzes/32113",
    "mobile_url": "https://learning.flatironschool.com/courses/5935/quizzes/32113?force_user=1&persist_headless=1",
    "description": "<div>\n<div><span>It's time to check your knowledge! Use this quiz to create a custom study guide.</span></div>\n<div><span>Note any answers that were marked incorrect, so you can study the relevant</span></div>\n<div><span>material and try this quiz again.</span></div>\n<br>\n<div><span>If you don't know the answer to a question, please do not guess. Instead, select</span></div>\n<div><span>\"I don't know\". It's OK not to know everything and to admit when we're unsure.</span></div>\n</div>",
    "quiz_type": "assignment",
    "time_limit": null,
    "timer_autosubmit_disabled": false,
    "shuffle_answers": false,
    "show_correct_answers": true,
    "scoring_policy": "keep_highest",
    "allowed_attempts": 1,
    "one_question_at_a_time": false,
    "question_count": 11,
    "points_possible": 11.0,
    "cant_go_back": false,
    "access_code": null,
    "ip_filter": null,
    "due_at": null,
    "lock_at": null,
    "unlock_at": null,
    "published": true,
    "unpublishable": false,
    "locked_for_user": true,
    "lock_info": {
      "missing_permission": "participate_as_student",
      "asset_string": "quizzes:quiz_32113"
    },
    "lock_explanation": "This quiz is currently locked.",
    "hide_results": null,
    "show_correct_answers_at": null,
    "hide_correct_answers_at": null,
    "all_dates": [
      {
        "due_at": null,
        "unlock_at": null,
        "lock_at": null,
        "base": true
      }
    ],
    "can_unpublish": false,
    "can_update": true,
    "require_lockdown_browser": false,
    "require_lockdown_browser_for_results": false,
    "require_lockdown_browser_monitor": false,
    "lockdown_browser_monitor_data": null,
    "speed_grader_url": "https://learning.flatironschool.com/courses/5935/gradebook/speed_grader?assignment_id=192489",
    "permissions": {
      "manage": true,
      "read": true,
      "create": true,
      "update": true,
      "submit": true,
      "preview": true,
      "delete": true,
      "read_statistics": true,
      "grade": true,
      "review_grades": true,
      "view_answer_audits": true
    },
    "quiz_reports_url": "https://learning.flatironschool.com/api/v1/courses/5935/quizzes/32113/reports",
    "quiz_statistics_url": "https://learning.flatironschool.com/api/v1/courses/5935/quizzes/32113/statistics",
    "message_students_url": "https://learning.flatironschool.com/api/v1/courses/5935/quizzes/32113/submission_users/message",
    "section_count": 1,
    "important_dates": false,
    "quiz_submission_versions_html_url": "https://learning.flatironschool.com/courses/5935/quizzes/32113/submission_versions",
    "assignment_id": 192489,
    "one_time_results": false,
    "only_visible_to_overrides": false,
    "assignment_group_id": 15564,
    "show_correct_answers_last_attempt": false,
    "version_number": 2,
    "has_access_code": false,
    "post_to_sis": false,
    "migration_id": null,
    "in_paced_course": false,
    "question_types": [
      "multiple_choice_question",
      "multiple_answers_question"
    ]
  },
  "questions": [
    {
      "id": 213861,
      "quiz_id": 32113,
      "quiz_group_id": 7244,
      "assessment_question_id": 337835,
      "position": null,
      "question_name": "Question",
      "question_type": "multiple_choice_question",
      "question_text": "<p>What is the value of <code>string</code> after this code has executed?</p>\n<pre id=\"parse_result\" class=\"highlight\" data-lang=\"python\"><code id=\"parse_code\"><span class=\"k\">def</span> <span class=\"nf\">print_param</span><span class=\"p\">(</span><span class=\"n\">param</span><span class=\"p\">):</span>\n&nbsp; &nbsp; <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">param</span><span class=\"p\">)</span>\n\n<span class=\"n\">string</span> <span class=\"o\">=</span> <span class=\"n\">print_param</span><span class=\"p\">(</span><span class=\"s\">\"hello\"</span><span class=\"p\">)</span></code></pre>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p>Source: <a class=\"inline_disabled\" href=\"https://learning.flatironschool.com/courses/5935/assignments/192276\" target=\"_blank\">Functions in Python</a></p>",
      "answers": [
        {
          "id": 4477,
          "text": "",
          "html": "<code>None</code>",
          "comments": "",
          "comments_html": "<p>Right! A function call only returns the values in its <code>return</code> statement. Since <code>print_param()</code> does not have a <code>return</code> statement, it returns <code>None</code></p>",
          "weight": 100.0
        },
        {
          "id": 9114,
          "text": "hello",
          "html": "",
          "comments": "",
          "comments_html": "<p>Almost- <code>print_param()</code> prints <code>hello</code>, but a function call only returns the values in its <code>return</code> statement. Since <code>print_param()</code> does not have a <code>return</code> statement, it returns <code>None</code></p>",
          "weight": 0.0
        },
        {
          "id": 6665,
          "text": "param",
          "html": "",
          "comments": "",
          "comments_html": "<p>Remember that a function call only returns the values in its <code>return</code> statement. Since <code>print_param()</code> does not have a <code>return</code> statement, it returns <code>None</code></p>\n<p><em>Also:</em> remember that any parameters that are passed to a function can be referenced by their name throughout. <code>print_param()</code> prints <code>param</code>'s value, <code>hello</code>.</p>",
          "weight": 0.0
        },
        {
          "id": 6332,
          "text": "I don't know.",
          "html": "",
          "comments": "",
          "comments_html": "<p><span>Be sure to study the source/s for this question. You'll get it next time.</span></p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 213859,
      "quiz_id": 32113,
      "quiz_group_id": 7243,
      "assessment_question_id": 337833,
      "position": null,
      "question_name": "Question",
      "question_type": "multiple_choice_question",
      "question_text": "<p>What will this code print out?</p>\n<pre id=\"parse_result\" class=\"highlight\" data-lang=\"python\"><code id=\"parse_code\"><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">\"Steven\"</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s\">\"Hi, </span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s\">.\"</span> <span class=\"k\">if</span> <span class=\"n\">name</span> <span class=\"o\">!=</span> <span class=\"s\">\"Steven\"</span> <span class=\"k\">else</span>  <span class=\"sa\">f</span><span class=\"s\">\"Goodbye, </span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s\">.\"</span><span class=\"p\">)</span></code></pre>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p>Source: <a class=\"inline_disabled\" href=\"https://learning.flatironschool.com/courses/5935/assignments/192492\" target=\"_blank\">Control Flow: Conditional Statements</a></p>",
      "answers": [
        {
          "id": 7509,
          "text": "Goodbye, Steven.",
          "html": "",
          "comments": "",
          "comments_html": "<p><span>Right! S</span><span>ince </span><code>name != \"Steven\"</code> <span>is <code>False</code>, our <code>else</code> condition will be printed instead.</span></p>",
          "weight": 100.0
        },
        {
          "id": 5332,
          "text": "Hi, Steven.",
          "html": "",
          "comments": "",
          "comments_html": "<p>Since <code>name != \"Steven\"</code> is <code>False</code>, our <code>else</code> condition will be printed instead.</p>",
          "weight": 0.0
        },
        {
          "id": 8778,
          "text": "Hi, {name}.",
          "html": "",
          "comments": "",
          "comments_html": "<p>Remember that fStrings are formatted with the valuables of any variable names inside of curly brackets <code>{}</code>. This means that we will see the value of <code>name</code> in our output. Since <code>name != \"Steven\"</code> is <code>False</code>, our <code>else</code> condition will be printed instead.</p>",
          "weight": 0.0
        },
        {
          "id": 6896,
          "text": "I don't know.",
          "html": "",
          "comments": "",
          "comments_html": "<p><span>Be sure to study the source/s for this question. You'll get it next time.</span></p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 213860,
      "quiz_id": 32113,
      "quiz_group_id": 7243,
      "assessment_question_id": 337834,
      "position": null,
      "question_name": "Question",
      "question_type": "multiple_choice_question",
      "question_text": "<p>What will this code print out?</p>\n<pre id=\"parse_result\" class=\"highlight\" data-lang=\"python\"><code id=\"parse_code\"><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">\"Steven\"</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s\">\"Hi, </span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s\">.\"</span> <span class=\"k\">if</span> <span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s\">\"Steven\"</span> <span class=\"k\">else</span>  <span class=\"sa\">f</span><span class=\"s\">\"Goodbye, </span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s\">.\"</span><span class=\"p\">)</span></code></pre>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "",
      "answers": [
        {
          "id": 5116,
          "text": "Hi, Steven.",
          "html": "",
          "comments": "",
          "comments_html": "<p><span>Right! Si</span><span>nce </span><code>name == \"Steven\"</code> <span>is <code>True</code>, our first condition will be printed with <code>name</code> formatted into the fString.</span></p>",
          "weight": 100.0
        },
        {
          "id": 9205,
          "text": "Goodbye, Steven.",
          "html": "",
          "comments": "",
          "comments_html": "<p><span>Si</span><span>nce </span><code>name == \"Steven\"</code> <span>is <code>True</code>, our first condition, &nbsp;<code id=\"parse_code\"><span class=\"sa\">f</span><span class=\"s\">\"Hi, </span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s\">.\"</span></code> will be printed with <code>name</code> formatted into the fString.</span></p>",
          "weight": 0.0
        },
        {
          "id": 7722,
          "text": "Hi, {name}.",
          "html": "",
          "comments": "",
          "comments_html": "<p>Remember that fStrings are formatted with the valuables of any variable names inside of curly brackets <code>{}</code>. This means that we will see the value of <code>name</code> in our output. Since <code>name == \"Steven\"</code> is <code>True</code>, our first condition will be printed with <code>Steven</code> replacing <code>{name}</code>.</p>",
          "weight": 0.0
        },
        {
          "id": 9268,
          "text": "I don't know.",
          "html": "",
          "comments": "",
          "comments_html": "",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 213591,
      "quiz_id": 32113,
      "quiz_group_id": 7242,
      "assessment_question_id": 337668,
      "position": null,
      "question_name": "Question",
      "question_type": "multiple_choice_question",
      "question_text": "<p>What will this <code>while</code> loop do?</p>\n<pre id=\"parse_result\" class=\"highlight\" data-lang=\"python\"><code id=\"parse_code\"><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n<span class=\"k\">while</span> <span class=\"n\">x</span> <span class=\"o\">&lt;</span> <span class=\"mi\">10</span><span class=\"p\">:</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"so many loops\"</span><span class=\"p\">)</span></code></pre>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p>Source: <a class=\"inline_disabled\" href=\"https://learning.flatironschool.com/courses/5935/assignments/192417\" target=\"_blank\">Control Flow: Loops</a></p>",
      "answers": [
        {
          "id": 5886,
          "text": "Output \"so many loops\" infinitely.",
          "html": "",
          "comments": "",
          "comments_html": "<p>Right! Since we never change the value of <code>x</code>, <code>x</code> will always be less than 10. The condition for the <code>while</code> loop is always <code>True</code>.</p>",
          "weight": 100.0
        },
        {
          "id": 5836,
          "text": "Output \"so many loops\" one time.",
          "html": "",
          "comments": "",
          "comments_html": "<p>Since we never change the value of <code>x</code>, <code>x</code> will always be less than 10. The condition for the <code>while</code> loop is always <code>True</code>.</p>",
          "weight": 0.0
        },
        {
          "id": 2836,
          "text": "Output \"so many loops\" 10 times.",
          "html": "",
          "comments": "",
          "comments_html": "<p>Since we never change the value of <code>x</code>, <code>x</code> will always be less than 10. The condition for the <code>while</code> loop is always <code>True</code>.</p>",
          "weight": 0.0
        },
        {
          "id": 6762,
          "text": "I don't know.",
          "html": "",
          "comments": "",
          "comments_html": "<p><span>Be sure to study the source/s for this question. You'll get it next time.</span></p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 213858,
      "quiz_id": 32113,
      "quiz_group_id": 7242,
      "assessment_question_id": 337832,
      "position": null,
      "question_name": "Question",
      "question_type": "multiple_choice_question",
      "question_text": "<p>Here is a repeated list of <code>print()</code> statements.</p>\n<pre id=\"parse_result\" class=\"highlight\" data-lang=\"python\"><code id=\"parse_code\"><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"hi\"</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"hi\"</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"hi\"</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"hi\"</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"hi\"</span><span class=\"p\">)</span></code></pre>\n<p>How would you repeat this with a <code>while</code> loop 100 times?</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p>Source: <a class=\"inline_disabled\" href=\"https://learning.flatironschool.com/courses/5935/assignments/192417\" target=\"_blank\">Control Flow: Loops</a></p>",
      "answers": [
        {
          "id": 1848,
          "text": "",
          "html": "<pre id=\"parse_result\" class=\"highlight\" data-lang=\"python\"><code id=\"parse_code\"><span class=\"n\">counter</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n<span class=\"k\">while</span> <span class=\"n\">counter</span> <span class=\"o\">&lt;</span> <span class=\"mi\">100</span><span class=\"p\">:</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"hi\"</span><span class=\"p\">)</span>\n    <span class=\"n\">counter</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span></code></pre>",
          "comments": "",
          "comments_html": "<p><span>Right! Since we start the counter at 0 and keep it running as long as the counter is less than 100, this will loop 100 times (starting from 0 and continuing until the counter is 99).</span></p>",
          "weight": 100.0
        },
        {
          "id": 9370,
          "text": "",
          "html": "<pre id=\"parse_result\" class=\"highlight\" data-lang=\"python\"><code id=\"parse_code\"><span class=\"n\">counter</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n\n<span class=\"k\">while</span> <span class=\"n\">counter</span> <span class=\"o\">&lt;</span> <span class=\"mi\">100</span><span class=\"p\">:</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"hi\"</span><span class=\"p\">)</span>\n    <span class=\"n\">counter</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span></code></pre>",
          "comments": "",
          "comments_html": "<p><span>Close, but not quite. Since the counter starts at one and the while loop only runs while the counter is&nbsp;</span><strong>less than</strong><span>&nbsp;100, this will only run our loop 99 times.</span></p>",
          "weight": 0.0
        },
        {
          "id": 7269,
          "text": "",
          "html": "<pre id=\"parse_result\" class=\"highlight\" data-lang=\"python\"><code id=\"parse_code\"><span class=\"k\">while</span> <span class=\"bp\">True</span><span class=\"p\">:</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"hi\"</span><span class=\"p\">)</span></code></pre>",
          "comments": "",
          "comments_html": "<p><span>Be careful with this one — since the condition will always be&nbsp;</span><code>True</code><span>&nbsp;and there's no&nbsp;</span><code>break</code><span>&nbsp;from the loop, this will run in an infinite loop!</span></p>",
          "weight": 0.0
        },
        {
          "id": 5433,
          "text": "I don't know.",
          "html": "",
          "comments": "",
          "comments_html": "<p><span>Be sure to study the source/s for this question. You'll get it next time.</span></p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 213862,
      "quiz_id": 32113,
      "quiz_group_id": 7243,
      "assessment_question_id": 337836,
      "position": null,
      "question_name": "Question",
      "question_type": "multiple_answers_question",
      "question_text": "<p>When is it a good idea to use an<span>&nbsp;</span><code>if/else</code><span>&nbsp;</span>statement instead of a ternary operator (conditional expression)? Select all that apply.</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p>Source: <a class=\"inline_disabled\" href=\"https://learning.flatironschool.com/courses/5935/assignments/192492\" target=\"_blank\">Control Flow: Conditional Statements</a></p>",
      "answers": [
        {
          "id": "5704",
          "text": "",
          "comments": "",
          "comments_html": "<p><span>The ternary operator can be more challenging to read when there are multiple branching conditions.</span></p>",
          "weight": 100.0,
          "html": "<p>When the<span>&nbsp;</span><code>if</code><span>&nbsp;</span>statement is complex with multiple<span>&nbsp;</span><code>elif</code><span>&nbsp;</span>conditions</p>"
        },
        {
          "id": "8853",
          "text": "",
          "comments": "",
          "comments_html": "<p>The ternary operator can be more challenging to read when it requires nesting.</p>",
          "weight": 100.0,
          "html": "<p>When the conditional logic would require nested ternary operators</p>"
        },
        {
          "id": "6646",
          "text": "",
          "comments": "",
          "comments_html": "<p>If using a ternary operator makes your code harder to read, it's better to use a regular<span>&nbsp;</span><code>if/else</code><span>&nbsp;</span>statement.</p>",
          "weight": 100.0,
          "html": "<p>When the ternary operator would take up more than one line</p>"
        },
        {
          "id": "5466",
          "text": "I don't know.",
          "comments": "",
          "comments_html": "<p><span>Be sure to study the source/s for this question. You'll get it next time.</span></p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 213863,
      "quiz_id": 32113,
      "quiz_group_id": 7243,
      "assessment_question_id": 337837,
      "position": null,
      "question_name": "Question",
      "question_type": "multiple_answers_question",
      "question_text": "<p>Let's refactor this code using a conditional expression (ternary operator):</p>\n<pre id=\"parse_result\" class=\"highlight\" data-lang=\"python\"><code id=\"parse_code\"><span class=\"k\">if</span> <span class=\"n\">condition_a</span><span class=\"p\">:</span>\n    <span class=\"n\">something</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"n\">something_else</span></code></pre>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p>Source: <a class=\"inline_disabled\" href=\"https://learning.flatironschool.com/courses/5935/assignments/192492\" target=\"_blank\">Control Flow: Conditional Statements</a></p>",
      "answers": [
        {
          "id": "1612",
          "text": "",
          "comments": "",
          "comments_html": "<p>Right! The format for a conditional expression, or ternary operator, in Python is:</p>\n<code>[value_if_true] if [condition] else [value_if_false]</code>",
          "weight": 100.0,
          "html": "<pre id=\"parse_result\" class=\"highlight\" data-lang=\"python\"><code id=\"parse_code\"><span class=\"n\">something</span> <span class=\"k\">if</span> <span class=\"n\">condition_a</span> <span class=\"k\">else</span> <span class=\"n\">something_else</span></code></pre>"
        },
        {
          "id": "7248",
          "text": "",
          "comments": "",
          "comments_html": "<p>Not quite- The format for a conditional expression, or ternary operator, in Python is:</p>\n<code>[value_if_true] if [condition] else [value_if_false]</code>",
          "weight": 0.0,
          "html": "<pre id=\"parse_result\" class=\"highlight\" data-lang=\"python\"><code id=\"parse_code\"><span class=\"k\">if</span> <span class=\"n\">condition_a</span> <span class=\"n\">something</span> <span class=\"k\">else</span> <span class=\"n\">something_else</span></code></pre>"
        },
        {
          "id": "6134",
          "text": "I don't know.",
          "comments": "",
          "comments_html": "<p><span>Be sure to study the source/s for this question. You'll get it next time.</span></p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 213585,
      "quiz_id": 32113,
      "quiz_group_id": 7241,
      "assessment_question_id": 337665,
      "position": null,
      "question_name": "Question",
      "question_type": "multiple_choice_question",
      "question_text": "<div>\n<p>We have a function <code>use_truthiness()</code> that should return <code>True</code>:</p>\n<pre id=\"parse_result\" class=\"highlight\" data-lang=\"python\"><code id=\"parse_code\"><span class=\"k\">def</span> <span class=\"nf\">use_truthiness</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"mi\">7</span> <span class=\"o\">&gt;</span> <span class=\"mi\">8</span> <span class=\"ow\">or</span> <span class=\"n\">x</span></code></pre>\n<p>What value(s) for <code>x</code> will make this function return <code>True</code>? Select all that apply.</p>\n</div>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p>Source: <a class=\"inline_disabled\" href=\"https://learning.flatironschool.com/courses/5935/pages/control-flow-operators\" target=\"_blank\">Control Flow: Operators</a></p>",
      "answers": [
        {
          "id": 3553,
          "text": "",
          "html": "<p><code>True</code></p>",
          "comments": "",
          "comments_html": "<p>Right! With the <code>or</code> operator, either the left side or the right side must be truthy in order for the operator to return <code>True</code>.</p>",
          "weight": 100.0
        },
        {
          "id": 441,
          "text": "",
          "html": "<p><code>False</code></p>",
          "comments": "",
          "comments_html": "<p>With the <code>or</code> operator, either the left side or the right side must be truthy in order fort he operator to return <code>True</code>. In this case, neither <code>7 &gt; 8</code> nor <code>False</code> are truthy.</p>",
          "weight": 0.0
        },
        {
          "id": 8123,
          "text": "I don't know.",
          "html": "",
          "comments": "",
          "comments_html": "<p><span>Be sure to study the source/s for this question. You'll get it next time.</span></p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 213586,
      "quiz_id": 32113,
      "quiz_group_id": 7241,
      "assessment_question_id": 337666,
      "position": null,
      "question_name": "Question",
      "question_type": "multiple_choice_question",
      "question_text": "<p>Which of the following functions would correctly return <code>True</code> when given the letter <code>\"o\"</code> as an argument?</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p>Source: <a class=\"inline_disabled\" href=\"https://learning.flatironschool.com/courses/5935/pages/control-flow-operators\" target=\"_blank\">Control Flow: Operators</a></p>",
      "answers": [
        {
          "id": 6108,
          "text": "",
          "html": "<pre id=\"parse_result\" class=\"highlight\" data-lang=\"python\"><code id=\"parse_code\"><span class=\"k\">def</span> <span class=\"nf\">check_vowel</span><span class=\"p\">(</span><span class=\"n\">letter</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">letter</span> <span class=\"o\">==</span> <span class=\"s\">\"a\"</span> <span class=\"ow\">or</span>\n            <span class=\"n\">letter</span> <span class=\"o\">==</span> <span class=\"s\">\"e\"</span> <span class=\"ow\">or</span>\n            <span class=\"n\">letter</span> <span class=\"o\">==</span> <span class=\"s\">\"i\"</span> <span class=\"ow\">or</span>\n            <span class=\"n\">letter</span> <span class=\"o\">==</span> <span class=\"s\">\"o\"</span> <span class=\"ow\">or</span>\n            <span class=\"n\">letter</span> <span class=\"o\">==</span> <span class=\"s\">\"u\"</span><span class=\"p\">)</span></code></pre>",
          "comments": "",
          "comments_html": "<p>Right! We can use the <code>or</code> operator to check if the letter matches any vowel.</p>",
          "weight": 100.0
        },
        {
          "id": 1866,
          "text": "",
          "html": "<pre id=\"parse_result\" class=\"highlight\" data-lang=\"python\"><code id=\"parse_code\"><span class=\"k\">def</span> <span class=\"nf\">check_vowel</span><span class=\"p\">(</span><span class=\"n\">letter</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">letter</span> <span class=\"o\">==</span> <span class=\"s\">\"a\"</span> <span class=\"ow\">and</span>\n            <span class=\"n\">letter</span> <span class=\"o\">==</span> <span class=\"s\">\"e\"</span> <span class=\"ow\">and</span>\n            <span class=\"n\">letter</span> <span class=\"o\">==</span> <span class=\"s\">\"i\"</span> <span class=\"ow\">and</span>\n            <span class=\"n\">letter</span> <span class=\"o\">==</span> <span class=\"s\">\"o\"</span> <span class=\"ow\">and</span>\n            <span class=\"n\">letter</span> <span class=\"o\">==</span> <span class=\"s\">\"u\"</span><span class=\"p\">)</span></code></pre>",
          "comments": "",
          "comments_html": "<p>The <code>and</code> operator won't work here, since it only returns <code>True</code> if both sides of the operator are truthy. A letter can't be <code>\"a\"</code>, <code>\"e\"</code>, <code>\"i\"</code>, <code>\"o\"</code>, and <code>\"u\"</code> simultaneously!</p>",
          "weight": 0.0
        },
        {
          "id": 8125,
          "text": "I don't know.",
          "html": "",
          "comments": "",
          "comments_html": "<p><span>Be sure to study the source/s for this question. You'll get it next time.</span></p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 213590,
      "quiz_id": 32113,
      "quiz_group_id": 7241,
      "assessment_question_id": 337667,
      "position": null,
      "question_name": "Question",
      "question_type": "multiple_choice_question",
      "question_text": "<p>What would be the output of the following statement?</p>\n<pre id=\"parse_result\" class=\"highlight\" data-lang=\"python\"><code id=\"parse_code\"><span class=\"n\">letter</span> <span class=\"o\">=</span> <span class=\"s\">\"b\"</span>\n\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">letter</span> <span class=\"o\">==</span> <span class=\"s\">\"a\"</span> <span class=\"ow\">or</span>\n    <span class=\"n\">letter</span> <span class=\"o\">==</span> <span class=\"s\">\"e\"</span> <span class=\"ow\">or</span>\n    <span class=\"n\">letter</span> <span class=\"o\">==</span> <span class=\"s\">\"i\"</span> <span class=\"ow\">or</span>\n    <span class=\"n\">letter</span> <span class=\"o\">==</span> <span class=\"s\">\"o\"</span> <span class=\"ow\">or</span>\n    <span class=\"n\">letter</span> <span class=\"o\">==</span> <span class=\"s\">\"u\"</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Begin \"if\" block\n</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"vowel.\"</span><span class=\"p\">)</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"c1\"># Begin \"else\" block\n</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"not a vowel.\"</span><span class=\"p\">)</span></code></pre>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p>Source: <a class=\"inline_disabled\" href=\"https://learning.flatironschool.com/courses/5935/pages/control-flow-operators\" target=\"_blank\">Control Flow: Operators</a></p>",
      "answers": [
        {
          "id": 1000,
          "text": "",
          "html": "<p>not a vowel.</p>",
          "comments": "",
          "comments_html": "<p>Right! The <code>or</code> operators for the <code>if</code> condition will all evaluate to <code>False</code>.</p>",
          "weight": 100.0
        },
        {
          "id": 9724,
          "text": "",
          "html": "<p>vowel.</p>",
          "comments": "",
          "comments_html": "<p>Not quite- The <code>or</code> operators for the <code>if</code> condition will all evaluate to <code>False</code>.</p>",
          "weight": 0.0
        },
        {
          "id": 5786,
          "text": "I don't know.",
          "html": "",
          "comments": "",
          "comments_html": "<p><span>Be sure to study the source/s for this question. You'll get it next time.</span></p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 213584,
      "quiz_id": 32113,
      "quiz_group_id": 7241,
      "assessment_question_id": 337664,
      "position": null,
      "question_name": "Question",
      "question_type": "multiple_answers_question",
      "question_text": "<div>\n<p>We have a function <code>return_false()</code> that uses both comparison and boolean operators:</p>\n</div>\n<pre id=\"parse_result\" class=\"highlight\" data-lang=\"python\"><code id=\"parse_code\"><span class=\"k\"><br>def</span> <span class=\"nf\">return_false</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"mi\">7</span> <span class=\"o\">&gt;</span> <span class=\"mi\">4</span> <span class=\"o\">and</span> <span class=\"mi\">100</span> <span class=\"o\">&lt;</span> <span class=\"n\">x</span></code></pre>\n<div>\n<p>What value(s) for <code>x</code> will make <code>return_false()</code> return <code>False</code>?</p>\n</div>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p>Source: <a class=\"inline_disabled\" href=\"https://learning.flatironschool.com/courses/5935/pages/control-flow-operators\" target=\"_blank\">Control Flow: Operators</a></p>",
      "answers": [
        {
          "id": "7594",
          "text": "100",
          "comments": "",
          "comments_html": "<div>\n    <p>Right! For the <code>&amp;</code> operator to return <code>False</code>, both sides of the operator must be <code>False</code></p>\n</div>",
          "weight": 100.0
        },
        {
          "id": "2513",
          "text": "101",
          "comments": "",
          "comments_html": "<div>\n&nbsp; &nbsp; <p>For the <code>&amp;</code> operator to return <code>False</code>, both sides of the operator must be <code>False</code>. <code>100 &lt; 101</code> evaluates to <code>True</code>, so this would return <code>True</code></p>\n</div>",
          "weight": 0.0
        },
        {
          "id": "3302",
          "text": "102",
          "comments": "",
          "comments_html": "<div>\n&nbsp; &nbsp; <p>For the <code>&amp;</code> operator to return <code>False</code>, both sides of the operator must be <code>False</code>. <code>100 &lt; 102</code> evaluates to <code>True</code>, so this would return <code>True</code></p>\n</div>",
          "weight": 0.0
        },
        {
          "id": "9789",
          "text": "99",
          "comments": "",
          "comments_html": "<div>\n    <p>Right! For the <code>&amp;</code> operator to return <code>False</code>, both sides of the operator must be <code>False</code></p>\n</div>",
          "weight": 100.0
        },
        {
          "id": "9054",
          "text": "I don't know",
          "comments": "",
          "comments_html": "<p><span>Be sure to study the source/s for this question. You'll get it next time.</span></p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    }
  ]
}